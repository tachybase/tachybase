name: Publish NPM Packages And Build Tachybase Engine Docker

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install deps
        run: pnpm install
      - name: Build
        run: pnpm build
      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          pnpm -r publish --provenance --access public --no-git-checks
      - name: Build with pkg
        run: pnpm --filter '@tachybase/engine' run build

      - name: Rename files for release
        run: |
          mv apps/engine/dist/engine-linux apps/engine/dist/engine-linux-x64
          mv apps/engine/dist/engine-macos apps/engine/dist/engine-macos-x64
          mv apps/engine/dist/engine-win apps/engine/dist/engine-win-x64

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            apps/engine/dist/engine-linux-x64
            apps/engine/dist/engine-macos-x64
            apps/engine/dist/engine-win-x64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tachybase:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Tag Name
        id: extract_tag
        run: echo version=`echo "${{ github.ref }}" | cut -d'/' -f3` >> "$GITHUB_OUTPUT"

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/tachybase-all/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            TACHYBASE_VERSION=${{ github.event.release.tag_name }}
          tags: |
            tachybase/tachybase-all:${{ github.event.release.tag_name }}
            tachybase/tachybase-all:latest

  tachybase-all:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Tachybase All
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/tachybase-all/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            TACHYBASE_VERSION=${{ github.event.release.tag_name }}
          tags: |
            tachybase/tachybase-all:${{ github.event.release.tag_name }}
            tachybase/tachybase-all:latest

  tachybase-engine:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Tachybase Engine
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/tachybase-engine/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            TACHYBASE_VERSION=${{ github.event.release.tag_name }}
          tags: |
            tachybase/tachybase-engine:${{ github.event.release.tag_name }}
            tachybase/tachybase-engine:latest
