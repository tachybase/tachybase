name: Release New Version Alpha

on:
  workflow_dispatch

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      version: ${{ steps.do_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          ref: main
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.0
      - name: Do major version release
        id: do_version
        run: |
          pnpm -r exec -- npm version prerelease --preid=alpha
          version=$(npm version prerelease --preid=alpha --no-git-tag-version)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          tagging_message: ${{ steps.do_version.outputs.version }}
          commit_message: "chore(version): release ${{ steps.do_version.outputs.version }}"

  publish:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release.outputs.version }}
      - uses: MOZGIII/install-ldid-action@v1
        with:
          tag: v2.1.5-procursus7
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install deps
        run: pnpm install
      - name: Build
        run: pnpm build
      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          pnpm -r publish --provenance --access public --no-git-checks --tag alpha

