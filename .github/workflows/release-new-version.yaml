name: Release New Version

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      version: ${{ steps.do_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          ref: main
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.0
      - name: Do major version release
        id: do_version
        run: |
          bump="${{ github.event.inputs.bump }}"
          if [ "$bump" = "major" ]; then
            pnpm -r exec -- npm version major
            version=$(npm version major --no-git-tag-version)
          elif [ "$bump" = "minor" ]; then
            pnpm -r exec -- npm version minor
            version=$(npm version minor --no-git-tag-version)
          else
            pnpm -r exec -- npm version patch
            version=$(npm version patch --no-git-tag-version)
          fi
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          tagging_message: ${{ steps.do_version.outputs.version }}
          commit_message: "chore(version): release ${{ steps.do_version.outputs.version }}"

  publish:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release.outputs.version }}
      - uses: MOZGIII/install-ldid-action@v1
        with:
          tag: v2.1.5-procursus7
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install deps
        run: pnpm install
      - name: Build
        run: pnpm build
      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          pnpm -r publish --provenance --access public --no-git-checks
      - name: Build with pkg
        run: pnpm --filter '@tachybase/engine' run build

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.release.outputs.version }}
          files: |
            apps/engine/dist/engine-linux-x64
            apps/engine/dist/engine-macos-x64
            apps/engine/dist/engine-win-x64.exe
            apps/engine/dist/engine-linux-arm64
            apps/engine/dist/engine-macos-arm64
            apps/engine/dist/engine-win-arm64.exe

  tachybase-all:
    needs: [publish, release]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release.outputs.version }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Tachybase All
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/tachybase-all/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            TACHYBASE_VERSION=${{ needs.release.outputs.version }}
          tags: |
            tachybase/tachybase-all:${{ needs.release.outputs.version }}
            tachybase/tachybase-all:latest

  tachybase-engine:
    needs: [publish, release]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release.outputs.version }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Tachybase Engine
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/tachybase-engine/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            TACHYBASE_VERSION=${{ needs.release.outputs.version }}
          tags: |
            tachybase/tachybase-engine:${{ needs.release.outputs.version }}
            tachybase/tachybase-engine:latest

